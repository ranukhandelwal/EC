<?xml version="1.0" encoding="utf-8"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <section name="rewriter" requirePermission="false" type="Intelligencia.UrlRewriter.Configuration.RewriterConfigurationSectionHandler, Intelligencia.UrlRewriter" />
  </configSections>
  <appSettings />
  <connectionStrings>
    <add name="strConn" connectionString="Server=69.167.173.116; Database=gatetuto_eth; user id=npreth; password=nji9NJI(" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.web>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation debug="true" targetFramework="4.0">
		<assemblies>
			<add assembly="System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
		</assemblies>
	</compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="Windows" />
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.
        -->
    <customErrors mode="Off" defaultRedirect="Error/ExamCrazy-ErrorPage.aspx">
      <error statusCode="403" redirect="Error/ExamCrazy-NoAccess.aspx" />
      <error statusCode="404" redirect="Error/ExamCrazy-FileNotFound.aspx" />
    </customErrors>
    <httpModules>
      <add name="UrlRewriter" type="Intelligencia.UrlRewriter.RewriterHttpModule, Intelligencia.UrlRewriter" />
    </httpModules>
    <!--Machine Key below is to fix validation keys for viewstate
		Besides this validation fails and server throws error message. 
		 By default, ASP.NET encrypts the viewstate using an Autogenerated Key 
		 when the process spins up. The problem comes when a client (browser) 
		 sends the request with a viewstate encrypted with the key generated by 
		 another worker process. Since the key is different, ASP.NET will not be 
		 able to decrypt the viewstate and it will throw an error Validation of 
		 viewstate MAC failed. 
		 Solution: Configure ASP.NET to not use Auto-Generated Key but rather 
		 a predefined key. This is the preferred method among others suggested.
		 http://hosting.india.to/clients/knowledgebase/175/Validation-of-viewstate-MAC-failed-If-this-application-is-hosted-by-a-Web-Farm-or-cluster-ensure-that-andltmachineKeyandgt-configuration-specifies-the-same-validationKey-and-validation-algorithm-AutoGenerate-cannot-be-used-in-a-cluster.html
		 
		-->
    <machineKey validationKey="80D00E0C0DB89E4878FDD085040A86E2337753A1A3403269770BDAAD6FAD61E128A569FBD20AF236546E56C6FB846D1045AB04B0F415BD98ABA254CBC9958EE3" decryptionKey="A6949C9D40D00A210C9F0D23659BAC897503BDEEF1BBCACFC50880BB272BC475" validation="SHA1" decryption="AES" />
    <!--
      <siteMap>
        <providers>
          <add siteMapFile="Web.sitemap" name="XmlSiteMapProvider" type="System.Web.XmlSiteMapProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        </providers>
      </siteMap>
-->
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
      <controls>
        <add tagPrefix="ajaxToolkit" assembly="AjaxControlToolkit" namespace="AjaxControlToolkit" />
      </controls>
    </pages>
  </system.web>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
  <system.webServer>
    <modules>
      <add name="UrlRewriter" type="Intelligencia.UrlRewriter.RewriterHttpModule" />
    </modules>
    <!--<modules runAllManagedModulesForAllRequests="true">
      <add name="UrlRewriter" type="Intelligencia.UrlRewriter.RewriterHttpModule" DUPLICATE/>
    </modules>-->
    <validation validateIntegratedModeConfiguration="false" />
  </system.webServer>
  <rewriter>
    <rewrite url="~/User/(.*)" to="~/User/__user.aspx?RequestedURL=$1" />
    <rewrite url="~/Jobs-Interviews/(.*)" to="~/Jobs-Interviews/__Jobs.aspx?RequestedURL=$1" />
	<rewrite url="~/pre-engineering/AIEEE/([a-zA-Z0-9_-]+)\.(.+)" to="~/pre-engineering/AIEEE/$1.aspx"/>
	<rewrite url="~/pre-engineering/AIEEE/([a-zA-Z0-9_-]+$)" to="~/pre-engineering/AIEEE/$1.aspx"/>
	<rewrite url="~/pre-engineering/([a-zA-Z0-9_-]+)\.(.+)" to="~/pre-engineering/$1.aspx"/>
	<rewrite url="~/pre-engineering/([a-zA-Z0-9_-]+$)" to="~/pre-engineering/$1.aspx"/>
	  
  </rewriter>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions.Design" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>